{"version":3,"sources":["components/NavBar.js","components/EnterText.js","components/Alert.js","App.js","index.js"],"names":["NavBar","props","useState","redCol","setRedCol","greenCol","setGreenCol","blueCol","setBlueCol","className","mode","href","type","id","role","tabIndex","onChange","document","body","style","backgroundColor","htmlFor","handleMode","EnterText","text","setText","color","value","e","target","placeholder","rows","onClick","toUpperCase","showAlert","toLowerCase","cText","getElementById","select","setSelectionRange","navigator","clipboard","writeText","console","log","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setTimeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d71e658.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport const NavBar = (props) => {\r\n  const [redCol, setRedCol] = useState(false);\r\n  const [greenCol, setGreenCol] = useState(false);\r\n  const [blueCol, setBlueCol] = useState(false);\r\n  const handleRed = () =>{\r\n   if(redCol)\r\n   {\r\n    document.body.style.backgroundColor = \"white\";\r\n    setRedCol(false);\r\n   }else{\r\n     setRedCol(true);\r\n    document.body.style.backgroundColor = \"red\";\r\n   }\r\n  }\r\n\r\n  const handleGreen = () =>{\r\n    if(greenCol)\r\n    {\r\n     document.body.style.backgroundColor = \"white\";\r\n     setGreenCol(false);\r\n    }else{\r\n      setGreenCol(true);\r\n     document.body.style.backgroundColor = \"green\";\r\n    }\r\n   }\r\n\r\n   const handleBlue = () =>{\r\n    if(blueCol)\r\n    {\r\n     document.body.style.backgroundColor = \"white\";\r\n     setBlueCol(false);\r\n    }else{\r\n      setBlueCol(true);\r\n     document.body.style.backgroundColor = \"blue\";\r\n    }\r\n   }\r\n    return (\r\n       \r\n         <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">About Us</a>\r\n        </li>\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\" /></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\": \"light\"}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={handleRed} />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Red mode </label>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\": \"light\"}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={handleGreen}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Green mode </label>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\": \"light\"}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={handleBlue}/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Blue mode </label>\r\n      </div>\r\n\r\n      <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\": \"light\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={()=>{props.handleMode()}}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> {props.mode === 'light' ? \"Light\": \"Drak\"} mode</label>\r\n</div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>   \r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const EnterText = (props) => {\r\nconst [text, setText] = useState(\"Enter Text Here .............\")\r\nconst handleChange = (e) =>{\r\n    setText(e.target.value)\r\n}\r\nconst handleUpper = () =>{\r\n    setText(text.toUpperCase())\r\n    props.showAlert(\"Text converted into Uppercase\", \"success\")\r\n}\r\nconst handleLower = () =>{\r\n    setText(text.toLowerCase())\r\n    props.showAlert(\"Text convrted into Lowercase\", \"success\")\r\n}\r\nconst handleClear = () =>{\r\n    setText(\"\");\r\n    props.showAlert(\"Text cleared from textarea\", \"success\")\r\n}\r\nconst handleCopy = () =>{\r\n    const cText = document.getElementById('mytextarea');\r\n    cText.select();\r\n    cText.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(cText.value)\r\n    console.log(cText.value);\r\n    props.showAlert(\"Text is copied\", \"success\")\r\n}\r\n const handleExtraSpaces = () =>{\r\n     let newText = text.split(/[ ]+/);\r\n     setText(newText.join(\" \"));\r\n     console.log(newText.join(\" \"))\r\n     props.showAlert(\"Extra Spaces removed from text\", \"success\")\r\n }\r\n    return (\r\n        <div className=\"container\" style={{color: props.mode==='dark'? 'white':'black'}}>\r\n            <h1>Enter Text Here</h1>\r\n            <div className=\"form-floating\">\r\n  <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'? 'gray':'white', \r\n  color: props.mode==='dark'? 'white':'black'}} onChange={handleChange} placeholder=\"Leave a comment here\" id=\"mytextarea\" rows=\"5\"></textarea>\r\n</div>\r\n  <button type=\"button\" className=\"btn btn-primary my-2\" onClick={handleUpper}>Convert UpperCase</button>\r\n  <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleLower}>Convert LowerCase</button>\r\n  <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleClear}>Clear</button>\r\n  <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleCopy}>Copy</button>\r\n  <button type=\"button\" className=\"btn btn-primary my-2 mx-2\" onClick={handleExtraSpaces}>Extra Spaces</button>\r\n<div>\r\n    <div className=\"container\" style={{color: props.mode==='dark'? 'white':'black'}}>\r\n    <h2>PreView Of Text</h2>\r\n    <p>Number of words = {text === \"\" ?  0 : text.split(\" \").length -1} </p> <span>Number of characters = {text.length}</span>\r\n<p>Time Required To Read = {0.008 * (text.split(\" \").length - 1)} minutes</p>\r\n<p>{text.length>0 ? text: \"Enter Text in the above Textbox to preview\"}</p>\r\n</div>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && \r\n        <>\r\n         <div className={`alert alert-${props.alert.type} alert-dismissible`} role=\"alert\" id=\"liveAlert\">\r\n           {capitalize(props.alert.type)} :<strong>{props.alert.message}</strong>\r\n</div>\r\n</>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react';\n\nimport { NavBar } from './components/NavBar';\nimport { EnterText } from './components/EnterText';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); \n  const [alert, setAlert] = useState(null);\nconst showAlert = (message, type) =>{\nsetAlert({message, type});\nsetTimeout(() => {\n  setAlert(null);\n}, 2000);\n}\n\n  const handleMode = () => {\n    if(mode === \"dark\"){\n    setMode('light');\n    document.body.style.backgroundColor = \"white\";\n    showAlert(\"Light Mode Is Enabled\", \"danger\")\n    }\n    else{\n    setMode('dark');\n    document.body.style.backgroundColor = \"gray\";\n    showAlert(\"Dark Mode Is Enabled\", \"success\")\n    }\n  }\n  return (\n    \n    <div className=\"App\">\n      <NavBar mode={mode} handleMode={handleMode}/>\n      <Alert alert={alert}/>      \n      \n      \n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> <About name=\"Zeeshan Ali\"/> </Route> */}\n          {/* <Route exact path=\"/\">  */}\n          <EnterText showAlert={showAlert} mode={mode} /> \n          {/* </Route> */}\n          \n        {/* </Switch> */}\n   \n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}